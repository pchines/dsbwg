#!/usr/bin/perl -w

use strict;
use warnings;
use Getopt::Long;
use Pod::Usage;
use File::Spec;
use DSBWG::Archive;
use GTB::File qw(Open);
use GTB::Run qw(as_number);
our %Opt;
our $VERSION = '0.2';
our $EMPTY = q{};

=head1 NAME

archive_check_complete - update database to indicate dir has been checked

=head1 SYNOPSIS

To be run after archive_check is run and reviewed carefully.

Update database for Archive Request #27:

  archive_check_complete -ar 27 /path/to/DIR.info.txt

For complete documentation, run C<archive_check_complete -man>

=head1 DESCRIPTION

Check and update database:

 - confirm basename of directory is right
 - update status from "new" to "checked"
 - set total size of archive
 - set check_date to today, indicating completion
 - add current user to history/notes ?
 - set real_host and real_path, based on mount point
 - upload files and dirs to database

=cut

#------------
# Begin MAIN 
#------------

process_commandline();
my $ar = DSBWG::Archive->new(db => $Opt{db}, user => $Opt{name});
my $req = $ar->get_archive_request($Opt{archive_id});
my $rh_stats = $ar->read_stats($ARGV[0]);
if ($Opt{upload}
        && !(-f $rh_stats->{files_file} && -f $rh_stats->{dirs_file})) {
    die "Missing $rh_stats->{files_file} or $rh_stats->{dirs_file}\n"
        . "These files must be in same directory as $ARGV[0]\n"
        . "To proceed without uploading these files, use the"
        . " --noupload option (not recommended)\n";
}
my $rh_mods = changes_to_record($req, $rh_stats);
$ar->update_status(%$rh_mods,
        status_from   => "new",
        status_to     => "checked",
        check_date    => $Opt{date},
        map { $_ => $rh_stats->{$_} } qw(size n_files n_dirs
                real_host real_path files_file dirs_file),
        );
if ($Opt{upload}) {
    $ar->upload_file($rh_stats->{files_file}, "file_info");
    $ar->upload_file($rh_stats->{dirs_file}, "dir_info");
}

#------------
# End MAIN
#------------

sub changes_to_record {
    my ($ar, $rh_info) = @_;
    my %change;
    if ($Opt{name}) {
        $change{notes_add} = "$Opt{date}: $Opt{name} ran archive_check_complete\n";
    }
    if ($Opt{host}) {
        $change{user_host} = $Opt{host};
        $change{notes_add} .= "user_host changed from $ar->{user_host} to $Opt{host}\n";
    }
    if ($Opt{path}) {
        $change{user_path} = $Opt{path};
        $change{notes_add} .= "user_path changed from $ar->{user_path} to $Opt{path}\n";
    }
    if ($Opt{incident}) {
        $change{inc_prepare} = $Opt{incident};
    }
    return \%change;
}

sub process_commandline {
    # Set defaults here
    %Opt = (date	=> DSBWG::Archive->today(),
            db          => 'storage',
            upload      => 1,
            name        => $ENV{USER},
            );
    GetOptions(\%Opt, qw(archive_id=i date=s db=s dryrun host=s incident=s
                name|u=s path=s translate=s upload!
                manual help+ version)) || pod2usage(0);
    if ($Opt{manual})  { pod2usage(verbose => 2); }
    if ($Opt{help})    { pod2usage(verbose => $Opt{help}-1); }
    if ($Opt{version}) { die "archive_check_complete, version $VERSION\n"; }
    # If non-option arguments are required, uncomment next line
    if (@ARGV != 1) {
        pod2usage("Expect single archive_check INFO file as input");
    }
    if (!$Opt{archive_id}) {
        pod2usage("Archive ID is required");
    }
}

__END__

=head1 OPTIONS

=over 4

=item B<--archive_id> N

Required.  Database ID for this archive request.

=item B<--db> realm

Database realm to use to connect to the database.  The default realm name is
"storage".  Having this realm file configured allows you to connect to the
database with your own credentials, without having to manually supply a
password every time.  See C<NHGRI::Db::Connector> for details.

=item B<--dryrun>

Don't update database, just indicate what would be done.

=item B<--host> REALHOST

Hostname to use for real_host column.

=item B<--incident> INCXXXXXXX

Incident ticket number associated with the "preparation" phase of thie
archive request.  If provided, will update the inc_prep database column with
this value.

=item B<--noupload>

By default, this script uploads a copy of the "PREFIX.files.txt.gz" and
"PREFIX.dirs.txt.gz" to the database.  This option prevents that,

=item B<--path> /real/path

Path to use for real_path column.  It is usually best to let the program
figure this out, based on filesystem mounts.

=item B<--help|--manual>

Display documentation.  One C<--help> gives a brief synopsis, C<-h -h> shows
all options, C<--manual> provides complete documentation.

=back

=head1 AUTHOR

 Peter Chines - pchines@mail.nih.gov

=head1 LEGAL

This software/database is "United States Government Work" under the terms of
the United States Copyright Act.  It was written as part of the authors'
official duties for the United States Government and thus cannot be
copyrighted.  This software/database is freely available to the public for
use without a copyright notice.  Restrictions cannot be placed on its present
or future use. 

Although all reasonable efforts have been taken to ensure the accuracy and
reliability of the software and data, the National Human Genome Research
Institute (NHGRI) and the U.S. Government does not and cannot warrant the
performance or results that may be obtained by using this software or data.
NHGRI and the U.S.  Government disclaims all warranties as to performance,
merchantability or fitness for any particular purpose. 

In any work or product derived from this material, proper attribution of the
authors as the source of the software or data should be made, using "NHGRI
Information Technology Branch" as the citation. 

=cut
